@model IEnumerable<Album>
@inject IOptions<AppOptions> AppOptions
@{
    Layout = null;
}<?xml version="1.0" encoding="UTF-8"?>

<feed xmlns="http://www.w3.org/2005/Atom">
    <title>RymAtom</title>
    @* TODO Generate unique id? *@
    <id>http://localhost:@AppOptions.Value.Port</id>
    <link href="http://localhost:@AppOptions.Value.Port" rel="self"/>
    <updated>@(Model.FirstOrDefault() is {} lastAlbum ? lastAlbum.DateLastChanged : DateTime.UtcNow)</updated>
    <author>
        <name>RYM</name>
    </author>
    <icon type="image/png">https://e.snmc.io/2.5/img/sonemic.png</icon>
    <subtitle>An Atom feed of Upcoming albums scraped from RYM</subtitle>
    @foreach (var album in Model) {
        <entry>
            <title>
                @for (var i = 0; i < album.Artists.Count; i++)
                {
                    @album.Artists[i].Name@if (i < album.Artists.Count - 1) @(", ")
                }
                - @album.Title [@(album.IsReleased ? "Released" : "Upcoming")]
            </title>
            <link rel="alternate" type="text/html" href="@album.Href"/>
            <id>@album.Id@album.DateLastChanged</id>
            <published>@album.DateCreated</published>
            <updated>@album.DateLastChanged</updated>
            <content type="html">
                <![CDATA[
                    Release date: @(album.YearOnly ? album.ReleaseDate.ToString("yyyy") : album.ReleaseDate)
                    <p>
                        @for (var i = 0; i < album.Artists.Count; i++)
                        {
                            <a href="@album.Artists[i].Href" title="@album.Artists[i].Id">@album.Artists[i].Name</a>@if (i < album.Artists.Count - 1) @(", ")
                        }
                         - <a href="@album.Href" title="@album.Id">@album.Title</a>
                    </p>
                ]]>
            </content>
            <category term="@album.ReleaseType"/>
            <category term="@(album.IsReleased ? "Released" : "Upcoming")"/>
        </entry>
    }
</feed>
