@model IEnumerable<Album>
@inject IOptions<AppOptions> AppOptions
@{
    Layout = null;
}<?xml version="1.0" encoding="UTF-8"?>

<rss version="2.0">
<channel>
    <title>RymRss</title>
    <link>http://localhost:@AppOptions.Value.Port</link>
    <description>An RSS feed of Upcoming albums scraped from RYM</description>
    <language>en</language>
    @foreach (var album in Model) {
        <item>
            <title>
                @(album.IsReleased ? "Released" : "Upcoming"): @for (var i = 0; i < album.Artists.Count; i++)
                {
                    @album.Artists[i].Name@if (i < album.Artists.Count - 1) @(", ")
                }
                - @album.Title [@album.ReleaseType]
            </title>
            <@("link")>@album.Href<@("/link")>
            <description>
                @* TODO Extract repeating elements of both feeds into View Components / Partial Views *@
                <![CDATA[
                    Release date: @(album.YearOnly ? album.ReleaseDate.ToString("yyyy") : album.ReleaseDate)
                    <p>
                        @for (var i = 0; i < album.Artists.Count; i++)
                        {
                            <a href="@album.Artists[i].Href" title="@album.Artists[i].Id">@album.Artists[i].Name</a>@if (i < album.Artists.Count - 1) @(", ")
                        }
                         - <a href="@album.Href" title="@album.Id">@album.Title</a>
                    </p>
                ]]>
            </description>
            <pubDate>@album.DateLastChanged</pubDate>
            <guid isPermaLink="false">@album.Id@(album.DateLastChanged == album.DateCreated ? null : album.DateLastChanged)</guid>
            <category>@album.ReleaseType</category>
            <category>@(album.IsReleased ? "Released" : "Upcoming")</category>
        </item>
    }
</channel>
</rss>
